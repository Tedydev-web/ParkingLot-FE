{"ast":null,"code":"import { GET } from \"./base_request\";\nimport { API_URL } from \"../consts/api_url\";\nimport Axios from \"axios\";\nexport default {\n  geocode: (location, options) => {\n    return GET(API_URL.GEOCODE, {\n      latlng: `${location.latitude},${location.longitude}`\n    }, options);\n  },\n  autocomplete: (input, location, limit, radius, has_children, options) => {\n    return GET(API_URL.AUTOCOMPLETE, {\n      input,\n      location,\n      radius: radius || 3000,\n      limit: limit || 10,\n      has_children: has_children || false\n    }, options);\n  },\n  direction: (params, options) => {\n    return GET(API_URL.DIRECTION, {\n      origin: `${params.origin.latitude},${params.origin.longitude}`,\n      destination: `${params.destination.latitude},${params.destination.longitude}`,\n      vehicle: params.vehicle || 'car'\n    }, options);\n  },\n  distancematrix: (params, options) => {\n    return GET(API_URL.DISTANCEMATRIX, {\n      origins: `${params.origin.latitude},${params.origin.longitude}`,\n      destinations: `${params.destination.latitude},${params.destination.longitude}`,\n      vehicle: `${params.vehicle}`\n    }, options);\n  },\n  place_detail: (placeid, options) => {\n    return GET(API_URL.PLACE_DETAIL, {\n      placeid\n    }, options);\n  },\n  get_weather: (latitude, longitude) => {\n    return Axios.get(`https://api.openweathermap.org/data/2.5/weather?lat=${latitude}&lon=${longitude}&units=metric&lang=vi&appid=${\"b80572c03d85f1f8899c2073275803d9\"}`);\n  }\n};","map":{"version":3,"names":["GET","API_URL","Axios","geocode","location","options","GEOCODE","latlng","latitude","longitude","autocomplete","input","limit","radius","has_children","AUTOCOMPLETE","direction","params","DIRECTION","origin","destination","vehicle","distancematrix","DISTANCEMATRIX","origins","destinations","place_detail","placeid","PLACE_DETAIL","get_weather","get"],"sources":["D:/Workhome/ParkingLot/live-map/utils/request.js"],"sourcesContent":["import { GET } from \"./base_request\";\nimport { API_URL } from \"../consts/api_url\";\nimport Axios from \"axios\";\nexport default {\n  geocode: (location, options) => {\n    return GET(API_URL.GEOCODE, {\n      latlng: `${location.latitude},${location.longitude}`\n    }, options);\n  },\n  autocomplete: (input, location, limit, radius, has_children, options) => {\n    return GET(API_URL.AUTOCOMPLETE, {\n      input,\n      location,\n      radius: radius || 3000,\n      limit: limit || 10,\n      has_children: has_children || false\n    }, options);\n  },\n  direction: (params, options) => {\n    return GET(API_URL.DIRECTION, {\n      origin: `${params.origin.latitude},${params.origin.longitude}`,\n      destination: `${params.destination.latitude},${params.destination.longitude}`,\n      vehicle: params.vehicle || 'car'\n    }, options);\n  },\n  distancematrix: (params, options) => {\n    return GET(API_URL.DISTANCEMATRIX, {\n      origins: `${params.origin.latitude},${params.origin.longitude}`,\n      destinations: `${params.destination.latitude},${params.destination.longitude}`,\n      vehicle: `${params.vehicle}`\n    }, options);\n  },\n  place_detail: (placeid, options) => {\n    return GET(API_URL.PLACE_DETAIL, {\n      placeid\n    }, options);\n  },\n  get_weather: (latitude, longitude) => {\n    return Axios.get(`https://api.openweathermap.org/data/2.5/weather?lat=${latitude}&lon=${longitude}&units=metric&lang=vi&appid=${WEATHER_API}`)\n  }\n}\n"],"mappings":"AAAA,SAASA,GAAG;AACZ,SAASC,OAAO;AAChB,OAAOC,KAAK,MAAM,OAAO;AACzB,eAAe;EACbC,OAAO,EAAEA,CAACC,QAAQ,EAAEC,OAAO,KAAK;IAC9B,OAAOL,GAAG,CAACC,OAAO,CAACK,OAAO,EAAE;MAC1BC,MAAM,EAAE,GAAGH,QAAQ,CAACI,QAAQ,IAAIJ,QAAQ,CAACK,SAAS;IACpD,CAAC,EAAEJ,OAAO,CAAC;EACb,CAAC;EACDK,YAAY,EAAEA,CAACC,KAAK,EAAEP,QAAQ,EAAEQ,KAAK,EAAEC,MAAM,EAAEC,YAAY,EAAET,OAAO,KAAK;IACvE,OAAOL,GAAG,CAACC,OAAO,CAACc,YAAY,EAAE;MAC/BJ,KAAK;MACLP,QAAQ;MACRS,MAAM,EAAEA,MAAM,IAAI,IAAI;MACtBD,KAAK,EAAEA,KAAK,IAAI,EAAE;MAClBE,YAAY,EAAEA,YAAY,IAAI;IAChC,CAAC,EAAET,OAAO,CAAC;EACb,CAAC;EACDW,SAAS,EAAEA,CAACC,MAAM,EAAEZ,OAAO,KAAK;IAC9B,OAAOL,GAAG,CAACC,OAAO,CAACiB,SAAS,EAAE;MAC5BC,MAAM,EAAE,GAAGF,MAAM,CAACE,MAAM,CAACX,QAAQ,IAAIS,MAAM,CAACE,MAAM,CAACV,SAAS,EAAE;MAC9DW,WAAW,EAAE,GAAGH,MAAM,CAACG,WAAW,CAACZ,QAAQ,IAAIS,MAAM,CAACG,WAAW,CAACX,SAAS,EAAE;MAC7EY,OAAO,EAAEJ,MAAM,CAACI,OAAO,IAAI;IAC7B,CAAC,EAAEhB,OAAO,CAAC;EACb,CAAC;EACDiB,cAAc,EAAEA,CAACL,MAAM,EAAEZ,OAAO,KAAK;IACnC,OAAOL,GAAG,CAACC,OAAO,CAACsB,cAAc,EAAE;MACjCC,OAAO,EAAE,GAAGP,MAAM,CAACE,MAAM,CAACX,QAAQ,IAAIS,MAAM,CAACE,MAAM,CAACV,SAAS,EAAE;MAC/DgB,YAAY,EAAE,GAAGR,MAAM,CAACG,WAAW,CAACZ,QAAQ,IAAIS,MAAM,CAACG,WAAW,CAACX,SAAS,EAAE;MAC9EY,OAAO,EAAE,GAAGJ,MAAM,CAACI,OAAO;IAC5B,CAAC,EAAEhB,OAAO,CAAC;EACb,CAAC;EACDqB,YAAY,EAAEA,CAACC,OAAO,EAAEtB,OAAO,KAAK;IAClC,OAAOL,GAAG,CAACC,OAAO,CAAC2B,YAAY,EAAE;MAC/BD;IACF,CAAC,EAAEtB,OAAO,CAAC;EACb,CAAC;EACDwB,WAAW,EAAEA,CAACrB,QAAQ,EAAEC,SAAS,KAAK;IACpC,OAAOP,KAAK,CAAC4B,GAAG,CAAC,uDAAuDtB,QAAQ,QAAQC,SAAS,mEAA4C,CAAC;EAChJ;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}