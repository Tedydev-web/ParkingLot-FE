{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { Component, useEffect } from 'react';\nimport { STYLE_URL } from \"../consts\";\nimport Marker from \"./Marker\";\nimport { connect, useDispatch, useSelector } from 'react-redux';\nimport BottomInfoLocation from \"./BottomInfoLocation\";\nimport MenuRightClick from \"./MenuRightCLick\";\nimport { getDetailLatLngService } from \"../redux/sagas/placeSaga\";\nimport equal from 'fast-deep-equal/es6/react';\nimport { setMapViewportAction, getDetailByLatLngAction, setCenterLatLngAction, setMyLocationAction, getDetailByIdAction } from \"../redux/actions/place\";\nimport { searchAroundAction, clearSearchAroundAction, selectAroundPlaceAction } from \"../redux/actions/search\";\nimport { selectResultAction, navigationFromAction, navigationToAction, clearResultAction, navigationAction } from \"../redux/actions/navigation\";\nimport MarkerNavigation from \"./MarkerNavigation\";\nimport { setRedMarkerAction, setCollapsedInfoBoxAction, setPopupRightClick, setBoxVisibleAction } from \"../redux/actions/boxVisble\";\nimport normal_map_img from \"../static/images/normal_map.png\";\nimport satellite_img from \"../static/images/satellite.jpeg\";\nimport ReactDOMServer from 'react-dom/server';\nimport Axios from 'axios';\nimport Div100vh from 'react-div-100vh';\nimport Request from \"../utils/request\";\nimport { Mile_Travel } from \"../consts\";\nimport { isMobile } from 'react-device-detect';\nimport images from \"../utils/images\";\nimport { getParkingLotsRequest } from \"../redux/actions/parkingLot\";\nconst Map = () => {\n  const dispatch = useDispatch();\n  const {\n    parkingLots,\n    loading\n  } = useSelector(state => state.parkingLotReducer);\n  useEffect(() => {\n    dispatch(getParkingLotsRequest());\n  }, [dispatch]);\n\n  // Render markers cho mỗi parking lot\n  const renderParkingLotMarkers = () => {\n    return parkingLots.map(lot => __jsx(Marker, {\n      key: lot.id,\n      longitude: lot.longitude,\n      latitude: lot.latitude\n    }, __jsx(\"div\", {\n      className: \"marker\"\n    }, __jsx(\"div\", {\n      className: \"marker-content\"\n    }, \"P\"), __jsx(\"div\", {\n      className: \"marker-info\"\n    }, __jsx(\"h3\", null, lot.name), __jsx(\"p\", null, lot.address), __jsx(\"p\", null, \"Available: \", lot.availableSpots, \"/\", lot.capacity)))));\n  };\n  return __jsx(\"div\", {\n    className: \"map-container\"\n  }, __jsx(Map\n  // ... other map props\n  , null, !loading && renderParkingLotMarkers()));\n};\nexport default Map;","map":{"version":3,"names":["React","Component","useEffect","STYLE_URL","Marker","connect","useDispatch","useSelector","BottomInfoLocation","MenuRightClick","getDetailLatLngService","equal","setMapViewportAction","getDetailByLatLngAction","setCenterLatLngAction","setMyLocationAction","getDetailByIdAction","searchAroundAction","clearSearchAroundAction","selectAroundPlaceAction","selectResultAction","navigationFromAction","navigationToAction","clearResultAction","navigationAction","MarkerNavigation","setRedMarkerAction","setCollapsedInfoBoxAction","setPopupRightClick","setBoxVisibleAction","normal_map_img","satellite_img","ReactDOMServer","Axios","Div100vh","Request","Mile_Travel","isMobile","images","getParkingLotsRequest","Map","dispatch","parkingLots","loading","state","parkingLotReducer","renderParkingLotMarkers","map","lot","__jsx","key","id","longitude","latitude","className","name","address","availableSpots","capacity"],"sources":["D:/Workhome/ParkingLot/live-map/components/Map.jsx"],"sourcesContent":["import React, { Component, useEffect } from 'react';\nimport { STYLE_URL } from '../consts';\nimport Marker from './Marker';\nimport { connect, useDispatch, useSelector } from 'react-redux';\nimport BottomInfoLocation from './BottomInfoLocation';\nimport MenuRightClick from './MenuRightCLick';\nimport { getDetailLatLngService } from '../redux/sagas/placeSaga';\nimport { message, Avatar } from 'antd';\nimport equal from 'fast-deep-equal/es6/react';\nimport { setMapViewportAction, getDetailByLatLngAction, setCenterLatLngAction, setMyLocationAction, getDetailByIdAction } from '../redux/actions/place';\nimport { searchAroundAction, clearSearchAroundAction, selectAroundPlaceAction } from '../redux/actions/search';\nimport { selectResultAction, navigationFromAction, navigationToAction, clearResultAction, navigationAction } from '../redux/actions/navigation';\nimport MarkerNavigation from './MarkerNavigation';\nimport { setRedMarkerAction, setCollapsedInfoBoxAction, setPopupRightClick, setBoxVisibleAction } from '../redux/actions/boxVisble';\nimport normal_map_img from '../static/images/normal_map.png';\nimport satellite_img from '../static/images/satellite.jpeg';\nimport ReactDOMServer from 'react-dom/server';\nimport Axios from 'axios';\nimport Div100vh from 'react-div-100vh';\nimport Request from '../utils/request';\nimport { Mile_Travel } from '../consts';\nimport { isMobile } from 'react-device-detect';\nimport images from '../utils/images';\nimport { getParkingLotsRequest } from '../redux/actions/parkingLot';\n\nconst Map = () => {\n\tconst dispatch = useDispatch();\n\tconst { parkingLots, loading } = useSelector(state => state.parkingLotReducer);\n\n\tuseEffect(() => {\n\t\tdispatch(getParkingLotsRequest());\n\t}, [dispatch]);\n\n\t// Render markers cho mỗi parking lot\n\tconst renderParkingLotMarkers = () => {\n\t\treturn parkingLots.map(lot => (\n\t\t\t<Marker\n\t\t\t\tkey={lot.id}\n\t\t\t\tlongitude={lot.longitude}\n\t\t\t\tlatitude={lot.latitude}\n\t\t\t>\n\t\t\t\t<div className=\"marker\">\n\t\t\t\t\t<div className=\"marker-content\">P</div>\n\t\t\t\t\t<div className=\"marker-info\">\n\t\t\t\t\t\t<h3>{lot.name}</h3>\n\t\t\t\t\t\t<p>{lot.address}</p>\n\t\t\t\t\t\t<p>Available: {lot.availableSpots}/{lot.capacity}</p>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</Marker>\n\t\t));\n\t};\n\n\treturn (\n\t\t<div className=\"map-container\">\n\t\t\t<Map\n\t\t\t\t// ... other map props\n\t\t\t>\n\t\t\t\t{!loading && renderParkingLotMarkers()}\n\t\t\t</Map>\n\t\t</div>\n\t);\n};\n\nexport default Map;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,SAAS,QAAQ,OAAO;AACnD,SAASC,SAAS;AAClB,OAAOC,MAAM;AACb,SAASC,OAAO,EAAEC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AAC/D,OAAOC,kBAAkB;AACzB,OAAOC,cAAc;AACrB,SAASC,sBAAsB;AAE/B,OAAOC,KAAK,MAAM,2BAA2B;AAC7C,SAASC,oBAAoB,EAAEC,uBAAuB,EAAEC,qBAAqB,EAAEC,mBAAmB,EAAEC,mBAAmB;AACvH,SAASC,kBAAkB,EAAEC,uBAAuB,EAAEC,uBAAuB;AAC7E,SAASC,kBAAkB,EAAEC,oBAAoB,EAAEC,kBAAkB,EAAEC,iBAAiB,EAAEC,gBAAgB;AAC1G,OAAOC,gBAAgB;AACvB,SAASC,kBAAkB,EAAEC,yBAAyB,EAAEC,kBAAkB,EAAEC,mBAAmB;AAC/F,OAAOC,cAAc;AACrB,OAAOC,aAAa;AACpB,OAAOC,cAAc,MAAM,kBAAkB;AAC7C,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,iBAAiB;AACtC,OAAOC,OAAO;AACd,SAASC,WAAW;AACpB,SAASC,QAAQ,QAAQ,qBAAqB;AAC9C,OAAOC,MAAM;AACb,SAASC,qBAAqB;AAE9B,MAAMC,GAAG,GAAGA,CAAA,KAAM;EACjB,MAAMC,QAAQ,GAAGnC,WAAW,CAAC,CAAC;EAC9B,MAAM;IAAEoC,WAAW;IAAEC;EAAQ,CAAC,GAAGpC,WAAW,CAACqC,KAAK,IAAIA,KAAK,CAACC,iBAAiB,CAAC;EAE9E3C,SAAS,CAAC,MAAM;IACfuC,QAAQ,CAACF,qBAAqB,CAAC,CAAC,CAAC;EAClC,CAAC,EAAE,CAACE,QAAQ,CAAC,CAAC;;EAEd;EACA,MAAMK,uBAAuB,GAAGA,CAAA,KAAM;IACrC,OAAOJ,WAAW,CAACK,GAAG,CAACC,GAAG,IACzBC,KAAA,CAAC7C,MAAM;MACN8C,GAAG,EAAEF,GAAG,CAACG,EAAG;MACZC,SAAS,EAAEJ,GAAG,CAACI,SAAU;MACzBC,QAAQ,EAAEL,GAAG,CAACK;IAAS,GAEvBJ,KAAA;MAAKK,SAAS,EAAC;IAAQ,GACtBL,KAAA;MAAKK,SAAS,EAAC;IAAgB,MAAO,CAAC,EACvCL,KAAA;MAAKK,SAAS,EAAC;IAAa,GAC3BL,KAAA,aAAKD,GAAG,CAACO,IAAS,CAAC,EACnBN,KAAA,YAAID,GAAG,CAACQ,OAAW,CAAC,EACpBP,KAAA,2BAAeD,GAAG,CAACS,cAAc,OAAGT,GAAG,CAACU,QAAY,CAChD,CACD,CACE,CACR,CAAC;EACH,CAAC;EAED,OACCT,KAAA;IAAKK,SAAS,EAAC;EAAe,GAC7BL,KAAA,CAACT;EACA;EAAA,QAEC,CAACG,OAAO,IAAIG,uBAAuB,CAAC,CACjC,CACD,CAAC;AAER,CAAC;AAED,eAAeN,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module"}