{"ast":null,"code":"import { takeLatest, call, put } from 'redux-saga/effects';\nimport * as parkingLot from \"../consts/parkingLot\";\nimport { parkingLotService } from \"../../services/parkingLotService\";\nfunction* fetchParkingLotsSaga() {\n  try {\n    const parkingLots = yield call(parkingLotService.getAllParkingLots);\n    yield put({\n      type: parkingLot.FETCH_PARKING_LOTS_SUCCESS,\n      payload: parkingLots\n    });\n  } catch (error) {\n    yield put({\n      type: parkingLot.FETCH_PARKING_LOTS_FAILURE,\n      payload: error.message\n    });\n  }\n}\nfunction* fetchNearbyParkingLotsSaga(action) {\n  try {\n    const {\n      lat,\n      lng,\n      radius\n    } = action.payload;\n    const parkingLots = yield call(parkingLotService.getNearbyParkingLots, lat, lng, radius);\n    yield put({\n      type: parkingLot.FETCH_NEARBY_PARKING_LOTS_SUCCESS,\n      payload: parkingLots\n    });\n  } catch (error) {\n    yield put({\n      type: parkingLot.FETCH_NEARBY_PARKING_LOTS_FAILURE,\n      payload: error.message\n    });\n  }\n}\nexport default function* parkingLotSaga() {\n  yield takeLatest(parkingLot.FETCH_PARKING_LOTS_REQUEST, fetchParkingLotsSaga);\n  yield takeLatest(parkingLot.FETCH_NEARBY_PARKING_LOTS_REQUEST, fetchNearbyParkingLotsSaga);\n}","map":{"version":3,"names":["takeLatest","call","put","parkingLot","parkingLotService","fetchParkingLotsSaga","parkingLots","getAllParkingLots","type","FETCH_PARKING_LOTS_SUCCESS","payload","error","FETCH_PARKING_LOTS_FAILURE","message","fetchNearbyParkingLotsSaga","action","lat","lng","radius","getNearbyParkingLots","FETCH_NEARBY_PARKING_LOTS_SUCCESS","FETCH_NEARBY_PARKING_LOTS_FAILURE","parkingLotSaga","FETCH_PARKING_LOTS_REQUEST","FETCH_NEARBY_PARKING_LOTS_REQUEST"],"sources":["D:/Workhome/ParkingLot/live-map/redux/sagas/parkingLotSaga.js"],"sourcesContent":["import { takeLatest, call, put } from 'redux-saga/effects';\r\nimport * as parkingLot from '../consts/parkingLot';\r\nimport { parkingLotService } from '../../services/parkingLotService';\r\n\r\nfunction* fetchParkingLotsSaga() {\r\n  try {\r\n    const parkingLots = yield call(parkingLotService.getAllParkingLots);\r\n    yield put({ \r\n      type: parkingLot.FETCH_PARKING_LOTS_SUCCESS, \r\n      payload: parkingLots \r\n    });\r\n  } catch (error) {\r\n    yield put({ \r\n      type: parkingLot.FETCH_PARKING_LOTS_FAILURE,\r\n      payload: error.message \r\n    });\r\n  }\r\n}\r\n\r\nfunction* fetchNearbyParkingLotsSaga(action) {\r\n  try {\r\n    const { lat, lng, radius } = action.payload;\r\n    const parkingLots = yield call(\r\n      parkingLotService.getNearbyParkingLots,\r\n      lat,\r\n      lng, \r\n      radius\r\n    );\r\n    yield put({\r\n      type: parkingLot.FETCH_NEARBY_PARKING_LOTS_SUCCESS,\r\n      payload: parkingLots\r\n    });\r\n  } catch (error) {\r\n    yield put({\r\n      type: parkingLot.FETCH_NEARBY_PARKING_LOTS_FAILURE, \r\n      payload: error.message\r\n    });\r\n  }\r\n}\r\n\r\nexport default function* parkingLotSaga() {\r\n  yield takeLatest(\r\n    parkingLot.FETCH_PARKING_LOTS_REQUEST, \r\n    fetchParkingLotsSaga\r\n  );\r\n  yield takeLatest(\r\n    parkingLot.FETCH_NEARBY_PARKING_LOTS_REQUEST,\r\n    fetchNearbyParkingLotsSaga  \r\n  );\r\n} "],"mappings":"AAAA,SAASA,UAAU,EAAEC,IAAI,EAAEC,GAAG,QAAQ,oBAAoB;AAC1D,OAAO,KAAKC,UAAU;AACtB,SAASC,iBAAiB;AAE1B,UAAUC,oBAAoBA,CAAA,EAAG;EAC/B,IAAI;IACF,MAAMC,WAAW,GAAG,MAAML,IAAI,CAACG,iBAAiB,CAACG,iBAAiB,CAAC;IACnE,MAAML,GAAG,CAAC;MACRM,IAAI,EAAEL,UAAU,CAACM,0BAA0B;MAC3CC,OAAO,EAAEJ;IACX,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOK,KAAK,EAAE;IACd,MAAMT,GAAG,CAAC;MACRM,IAAI,EAAEL,UAAU,CAACS,0BAA0B;MAC3CF,OAAO,EAAEC,KAAK,CAACE;IACjB,CAAC,CAAC;EACJ;AACF;AAEA,UAAUC,0BAA0BA,CAACC,MAAM,EAAE;EAC3C,IAAI;IACF,MAAM;MAAEC,GAAG;MAAEC,GAAG;MAAEC;IAAO,CAAC,GAAGH,MAAM,CAACL,OAAO;IAC3C,MAAMJ,WAAW,GAAG,MAAML,IAAI,CAC5BG,iBAAiB,CAACe,oBAAoB,EACtCH,GAAG,EACHC,GAAG,EACHC,MACF,CAAC;IACD,MAAMhB,GAAG,CAAC;MACRM,IAAI,EAAEL,UAAU,CAACiB,iCAAiC;MAClDV,OAAO,EAAEJ;IACX,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOK,KAAK,EAAE;IACd,MAAMT,GAAG,CAAC;MACRM,IAAI,EAAEL,UAAU,CAACkB,iCAAiC;MAClDX,OAAO,EAAEC,KAAK,CAACE;IACjB,CAAC,CAAC;EACJ;AACF;AAEA,eAAe,UAAUS,cAAcA,CAAA,EAAG;EACxC,MAAMtB,UAAU,CACdG,UAAU,CAACoB,0BAA0B,EACrClB,oBACF,CAAC;EACD,MAAML,UAAU,CACdG,UAAU,CAACqB,iCAAiC,EAC5CV,0BACF,CAAC;AACH","ignoreList":[]},"metadata":{},"sourceType":"module"}