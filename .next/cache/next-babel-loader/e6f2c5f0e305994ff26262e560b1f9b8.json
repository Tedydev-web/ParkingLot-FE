{"ast":null,"code":"import _Card from \"antd/lib/card\";\nimport _Tooltip from \"antd/lib/tooltip\";\nvar __jsx = React.createElement;\n// import React, { Component } from 'react';\n// import { getDetailByLatLngAction, getDetailAroundPlace } from '../redux/actions/place';\n// import { setBoxVisibleAction, setPopupRightClick, setRedMarkerAction } from \"../redux/actions/boxVisble\"\n// import { Card, Tooltip } from 'antd';\n// import { connect } from 'react-redux';\n// import { CloseCircleFilled } from '@ant-design/icons';\n// import { clearSearchAroundAction } from '../redux/actions/search';\n\n// class BottomInfoLocation extends Component {\n//   onClick = () => {\n//     if (!this.props.isMarkerAround) {\n//       const latLng = {\n//         latitude: this.props.lat,\n//         longitude: this.props.lng\n//       }\n//       this.props.dispatch(getDetailByLatLngAction(latLng));\n//     } else {\n//       this.props.dispatch(getDetailAroundPlace(this.props.place_id))\n//     }\n//     this.props.changeVisibleBottomInfo(false);\n//     this.props.dispatch(setBoxVisibleAction('info'));\n//     this.props.dispatch(clearSearchAroundAction());\n//     this.props.dispatch(setPopupRightClick(false));\n//     this.props.removeMarker();\n//   }\n\n//   onClose = (e) => {\n//     e.stopPropagation();\n//     this.props.changeVisibleBottomInfo(false);\n//     this.props.dispatch(clearSearchAroundAction());\n//     this.props.removeMarker();\n//   }\n\n//   render() {\n//     const { name, lat, lng, address } = this.props;\n//     const title = <Tooltip title={<span onClick={(e) => e.stopPropagation()}>{name}</span>}>\n//       <span>{name}</span>\n//     </Tooltip>\n\n//     return (\n//       <div className='bottom-info-location-div'>\n//         <Card title={title}\n//           className=\"bottom-info-location\"\n//           onClick={() => this.onClick()}\n//           headStyle={{ padding: '5px 16px', margin: 0, color: '#000000' }}\n//           bodyStyle={{ padding: '12px 16px', margin: 0, color: '#595959' }}\n//           extra={<CloseCircleFilled\n//             style={{ color: '#000000', fontSize: 21, zIndex: 9999 }}\n//             onClick={this.onClose}\n//           />}\n//         >\n//           <Tooltip placement=\"bottom\" title={<span onClick={(e) => e.stopPropagation()}>{address}</span>}>\n//             <p className=\"address-mini-info\">{address}</p>\n//           </Tooltip>\n//           <p\n//             className=\"coord-mini-info\"\n//             onClick={(e) => e.stopPropagation()}\n//             style={{ cursor: \"text\" }}\n//           >\n//             {`${lat.toFixed(5)},${lng.toFixed(5)}`}\n//           </p>\n//         </Card>\n//       </div>\n//     )\n//   }\n// }\n\n// export default connect(null)(BottomInfoLocation);\n\n// ---------------------------------------------------------------//\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { CloseCircleFilled } from \"@ant-design/icons\";\nimport { getDetailByLatLngAction, getDetailAroundPlace } from \"../redux/actions/place\";\nimport { setBoxVisibleAction, setPopupRightClick, setRedMarkerAction } from \"../redux/actions/boxVisble\";\nimport { clearSearchAroundAction } from \"../redux/actions/search\";\nvar BottomInfoLocation = function BottomInfoLocation(props) {\n  var onClick = function onClick() {\n    var dispatch = props.dispatch,\n      isMarkerAround = props.isMarkerAround,\n      lat = props.lat,\n      lng = props.lng,\n      place_id = props.place_id,\n      changeVisibleBottomInfo = props.changeVisibleBottomInfo,\n      removeMarker = props.removeMarker;\n    if (!isMarkerAround) {\n      var latLng = {\n        latitude: lat,\n        longitude: lng\n      };\n      dispatch(getDetailByLatLngAction(latLng));\n    } else {\n      dispatch(getDetailAroundPlace(place_id));\n    }\n    changeVisibleBottomInfo(false);\n    dispatch(setBoxVisibleAction(\"info\"));\n    dispatch(clearSearchAroundAction());\n    dispatch(setPopupRightClick(false));\n    removeMarker();\n  };\n  var onClose = function onClose(e) {\n    e.stopPropagation();\n    var changeVisibleBottomInfo = props.changeVisibleBottomInfo,\n      dispatch = props.dispatch,\n      removeMarker = props.removeMarker;\n    changeVisibleBottomInfo(false);\n    dispatch(clearSearchAroundAction());\n    removeMarker();\n  };\n  var title = props.title,\n    address = props.address,\n    lat = props.lat,\n    lng = props.lng;\n  return __jsx(\"div\", {\n    className: \"bottom-info-location-div\"\n  }, __jsx(_Card, {\n    title: title,\n    className: \"bottom-info-location\",\n    onClick: onClick,\n    headStyle: {\n      padding: \"5px 16px\",\n      margin: 0,\n      color: \"#000000\"\n    },\n    bodyStyle: {\n      padding: \"12px 16px\",\n      margin: 0,\n      color: \"#595959\"\n    },\n    extra: __jsx(CloseCircleFilled, {\n      style: {\n        color: \"#000000\",\n        fontSize: 21,\n        zIndex: 9999\n      },\n      onClick: onClose\n    })\n  }, __jsx(_Tooltip, {\n    placement: \"bottom\",\n    title: __jsx(\"span\", {\n      onClick: function onClick(e) {\n        return e.stopPropagation();\n      }\n    }, address)\n  }, __jsx(\"p\", {\n    className: \"address-mini-info\"\n  }, address)), __jsx(\"p\", {\n    className: \"coord-mini-info\",\n    onClick: function onClick(e) {\n      return e.stopPropagation();\n    },\n    style: {\n      cursor: \"text\"\n    }\n  }, \"\".concat(lat.toFixed(5), \",\").concat(lng.toFixed(5)))));\n};\n_c = BottomInfoLocation;\nexport default connect(null)(BottomInfoLocation);\nvar _c;\n$RefreshReg$(_c, \"BottomInfoLocation\");","map":{"version":3,"names":["React","connect","CloseCircleFilled","getDetailByLatLngAction","getDetailAroundPlace","setBoxVisibleAction","setPopupRightClick","setRedMarkerAction","clearSearchAroundAction","BottomInfoLocation","props","onClick","dispatch","isMarkerAround","lat","lng","place_id","changeVisibleBottomInfo","removeMarker","latLng","latitude","longitude","onClose","e","stopPropagation","title","address","__jsx","className","_Card","headStyle","padding","margin","color","bodyStyle","extra","style","fontSize","zIndex","_Tooltip","placement","cursor","concat","toFixed","_c","$RefreshReg$"],"sources":["D:/Workhome/ParkingLot/live-map/components/BottomInfoLocation.jsx"],"sourcesContent":["// import React, { Component } from 'react';\n// import { getDetailByLatLngAction, getDetailAroundPlace } from '../redux/actions/place';\n// import { setBoxVisibleAction, setPopupRightClick, setRedMarkerAction } from \"../redux/actions/boxVisble\"\n// import { Card, Tooltip } from 'antd';\n// import { connect } from 'react-redux';\n// import { CloseCircleFilled } from '@ant-design/icons';\n// import { clearSearchAroundAction } from '../redux/actions/search';\n\n// class BottomInfoLocation extends Component {\n//   onClick = () => {\n//     if (!this.props.isMarkerAround) {\n//       const latLng = {\n//         latitude: this.props.lat,\n//         longitude: this.props.lng\n//       }\n//       this.props.dispatch(getDetailByLatLngAction(latLng));\n//     } else {\n//       this.props.dispatch(getDetailAroundPlace(this.props.place_id))\n//     }\n//     this.props.changeVisibleBottomInfo(false);\n//     this.props.dispatch(setBoxVisibleAction('info'));\n//     this.props.dispatch(clearSearchAroundAction());\n//     this.props.dispatch(setPopupRightClick(false));\n//     this.props.removeMarker();\n//   }\n\n//   onClose = (e) => {\n//     e.stopPropagation();\n//     this.props.changeVisibleBottomInfo(false);\n//     this.props.dispatch(clearSearchAroundAction());\n//     this.props.removeMarker();\n//   }\n\n//   render() {\n//     const { name, lat, lng, address } = this.props;\n//     const title = <Tooltip title={<span onClick={(e) => e.stopPropagation()}>{name}</span>}>\n//       <span>{name}</span>\n//     </Tooltip>\n\n//     return (\n//       <div className='bottom-info-location-div'>\n//         <Card title={title}\n//           className=\"bottom-info-location\"\n//           onClick={() => this.onClick()}\n//           headStyle={{ padding: '5px 16px', margin: 0, color: '#000000' }}\n//           bodyStyle={{ padding: '12px 16px', margin: 0, color: '#595959' }}\n//           extra={<CloseCircleFilled\n//             style={{ color: '#000000', fontSize: 21, zIndex: 9999 }}\n//             onClick={this.onClose}\n//           />}\n//         >\n//           <Tooltip placement=\"bottom\" title={<span onClick={(e) => e.stopPropagation()}>{address}</span>}>\n//             <p className=\"address-mini-info\">{address}</p>\n//           </Tooltip>\n//           <p\n//             className=\"coord-mini-info\"\n//             onClick={(e) => e.stopPropagation()}\n//             style={{ cursor: \"text\" }}\n//           >\n//             {`${lat.toFixed(5)},${lng.toFixed(5)}`}\n//           </p>\n//         </Card>\n//       </div>\n//     )\n//   }\n// }\n\n// export default connect(null)(BottomInfoLocation);\n\n\n\n\n\n// ---------------------------------------------------------------//\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Card, Tooltip } from \"antd\";\nimport { CloseCircleFilled } from \"@ant-design/icons\";\nimport {\n  getDetailByLatLngAction,\n  getDetailAroundPlace,\n} from \"../redux/actions/place\";\nimport {\n  setBoxVisibleAction,\n  setPopupRightClick,\n  setRedMarkerAction,\n} from \"../redux/actions/boxVisble\";\nimport { clearSearchAroundAction } from \"../redux/actions/search\";\n\nconst BottomInfoLocation = (props) => {\n  const onClick = () => {\n    const {\n      dispatch,\n      isMarkerAround,\n      lat,\n      lng,\n      place_id,\n      changeVisibleBottomInfo,\n      removeMarker,\n    } = props;\n\n    if (!isMarkerAround) {\n      const latLng = {\n        latitude: lat,\n        longitude: lng,\n      };\n      dispatch(getDetailByLatLngAction(latLng));\n    } else {\n      dispatch(getDetailAroundPlace(place_id));\n    }\n    changeVisibleBottomInfo(false);\n    dispatch(setBoxVisibleAction(\"info\"));\n    dispatch(clearSearchAroundAction());\n    dispatch(setPopupRightClick(false));\n    removeMarker();\n  };\n\n  const onClose = (e) => {\n    e.stopPropagation();\n    const { changeVisibleBottomInfo, dispatch, removeMarker } = props;\n    changeVisibleBottomInfo(false);\n    dispatch(clearSearchAroundAction());\n    removeMarker();\n  };\n\n  const { title, address, lat, lng } = props;\n\n  return (\n    <div className=\"bottom-info-location-div\">\n      <Card\n        title={title}\n        className=\"bottom-info-location\"\n        onClick={onClick}\n        headStyle={{ padding: \"5px 16px\", margin: 0, color: \"#000000\" }}\n        bodyStyle={{ padding: \"12px 16px\", margin: 0, color: \"#595959\" }}\n        extra={\n          <CloseCircleFilled\n            style={{ color: \"#000000\", fontSize: 21, zIndex: 9999 }}\n            onClick={onClose}\n          />\n        }\n      >\n        <Tooltip\n          placement=\"bottom\"\n          title={<span onClick={(e) => e.stopPropagation()}>{address}</span>}\n        >\n          <p className=\"address-mini-info\">{address}</p>\n        </Tooltip>\n        <p\n          className=\"coord-mini-info\"\n          onClick={(e) => e.stopPropagation()}\n          style={{ cursor: \"text\" }}\n        >\n          {`${lat.toFixed(5)},${lng.toFixed(5)}`}\n        </p>\n      </Card>\n    </div>\n  );\n};\n\nexport default connect(null)(BottomInfoLocation);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}