{"ast":null,"code":"import axios from 'axios';\nconst API_URL = process.env.NEXT_PUBLIC_API_URL || 'http://localhost:5257/api';\nexport const parkingLotService = {\n  getParkingLots: async () => {\n    try {\n      const response = await axios.get(`${API_URL}/ParkingLots`);\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching parking lots:', error);\n      throw error;\n    }\n  },\n  searchParkingLots: async keyword => {\n    try {\n      const response = await axios.get(`${API_URL}/ParkingLots?search=${keyword}`);\n      return response.data;\n    } catch (error) {\n      console.error('Error searching parking lots:', error);\n      throw error;\n    }\n  },\n  getNearbyParkingLots: async (lat, lng, radiusKm = 2) => {\n    try {\n      const response = await axios.get(`${API_URL}/ParkingLots/nearby?lat=${lat}&lng=${lng}&radiusKm=${radiusKm}`, {\n        headers: {\n          'Content-Type': 'application/json'\n          // Thêm headers khác nếu cần\n        }\n      });\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching nearby parking lots:', error);\n      throw error;\n    }\n  }\n};\nexport const {\n  getParkingLots,\n  searchParkingLots,\n  getNearbyParkingLots\n} = parkingLotService;","map":{"version":3,"names":["axios","API_URL","process","env","NEXT_PUBLIC_API_URL","parkingLotService","getParkingLots","response","get","data","error","console","searchParkingLots","keyword","getNearbyParkingLots","lat","lng","radiusKm","headers"],"sources":["D:/Workhome/ParkingLot/live-map/services/parkingLotService.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_URL = process.env.NEXT_PUBLIC_API_URL || 'http://localhost:5257/api';\n\nexport const parkingLotService = {\n\tgetParkingLots: async () => {\n\t\ttry {\n\t\t\tconst response = await axios.get(`${API_URL}/ParkingLots`);\n\t\t\treturn response.data;\n\t\t} catch (error) {\n\t\t\tconsole.error('Error fetching parking lots:', error);\n\t\t\tthrow error;\n\t\t}\n\t},\n\n\tsearchParkingLots: async (keyword) => {\n\t\ttry {\n\t\t\tconst response = await axios.get(`${API_URL}/ParkingLots?search=${keyword}`);\n\t\t\treturn response.data;\n\t\t} catch (error) {\n\t\t\tconsole.error('Error searching parking lots:', error);\n\t\t\tthrow error;\n\t\t}\n\t},\n\n\tgetNearbyParkingLots: async (lat, lng, radiusKm = 2) => {\n\t\ttry {\n\t\t\tconst response = await axios.get(\n\t\t\t\t`${API_URL}/ParkingLots/nearby?lat=${lat}&lng=${lng}&radiusKm=${radiusKm}`,\n\t\t\t\t{\n\t\t\t\t\theaders: {\n\t\t\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\t\t\t// Thêm headers khác nếu cần\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t);\n\t\t\treturn response.data;\n\t\t} catch (error) {\n\t\t\tconsole.error('Error fetching nearby parking lots:', error);\n\t\t\tthrow error;\n\t\t}\n\t},\n};\n\nexport const { getParkingLots, searchParkingLots, getNearbyParkingLots } = parkingLotService;\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,mBAAmB,IAAI,2BAA2B;AAE9E,OAAO,MAAMC,iBAAiB,GAAG;EAChCC,cAAc,EAAE,MAAAA,CAAA,KAAY;IAC3B,IAAI;MACH,MAAMC,QAAQ,GAAG,MAAMP,KAAK,CAACQ,GAAG,CAAC,GAAGP,OAAO,cAAc,CAAC;MAC1D,OAAOM,QAAQ,CAACE,IAAI;IACrB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACfC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;MACpD,MAAMA,KAAK;IACZ;EACD,CAAC;EAEDE,iBAAiB,EAAE,MAAOC,OAAO,IAAK;IACrC,IAAI;MACH,MAAMN,QAAQ,GAAG,MAAMP,KAAK,CAACQ,GAAG,CAAC,GAAGP,OAAO,uBAAuBY,OAAO,EAAE,CAAC;MAC5E,OAAON,QAAQ,CAACE,IAAI;IACrB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACfC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;MACrD,MAAMA,KAAK;IACZ;EACD,CAAC;EAEDI,oBAAoB,EAAE,MAAAA,CAAOC,GAAG,EAAEC,GAAG,EAAEC,QAAQ,GAAG,CAAC,KAAK;IACvD,IAAI;MACH,MAAMV,QAAQ,GAAG,MAAMP,KAAK,CAACQ,GAAG,CAC/B,GAAGP,OAAO,2BAA2Bc,GAAG,QAAQC,GAAG,aAAaC,QAAQ,EAAE,EAC1E;QACCC,OAAO,EAAE;UACR,cAAc,EAAE;UAChB;QACD;MACD,CACD,CAAC;MACD,OAAOX,QAAQ,CAACE,IAAI;IACrB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACfC,OAAO,CAACD,KAAK,CAAC,qCAAqC,EAAEA,KAAK,CAAC;MAC3D,MAAMA,KAAK;IACZ;EACD;AACD,CAAC;AAED,OAAO,MAAM;EAAEJ,cAAc;EAAEM,iBAAiB;EAAEE;AAAqB,CAAC,GAAGT,iBAAiB","ignoreList":[]},"metadata":{},"sourceType":"module"}