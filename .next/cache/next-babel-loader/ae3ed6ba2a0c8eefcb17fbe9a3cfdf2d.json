{"ast":null,"code":"import { call, put, takeLatest } from 'redux-saga/effects';\nimport * as parkingLot from \"../consts/parkingLot\";\nimport { getParkingLots } from \"../../services/parkingLotService\";\nimport { getParkingLotsSuccess, getParkingLotsFailure } from \"../actions/parkingLot\";\nimport { searchParkingLotsSuccess, searchParkingLotsFailure } from \"../actions/parkingLot\";\nimport { searchParkingLotsRequest } from \"../actions/parkingLot\";\nimport { parkingLotService } from \"../../services/parkingLotService\";\nfunction* getParkingLotsSaga() {\n  try {\n    const parkingLots = yield call(getParkingLots);\n    yield put(getParkingLotsSuccess(parkingLots));\n  } catch (error) {\n    yield put(getParkingLotsFailure(error.message));\n  }\n}\nfunction* searchParkingLotsSaga(action) {\n  try {\n    const results = yield call(parkingLotService.searchParkingLots, action.keyword);\n    yield put(searchParkingLotsSuccess(results));\n  } catch (error) {\n    yield put(searchParkingLotsFailure(error.message));\n  }\n}\nexport default function* parkingLotSaga() {\n  yield takeLatest(parkingLot.GET_PARKING_LOTS_REQUEST, getParkingLotsSaga);\n  yield takeLatest(parkingLot.SEARCH_PARKING_LOTS_REQUEST, searchParkingLotsSaga);\n}","map":{"version":3,"names":["call","put","takeLatest","parkingLot","getParkingLots","getParkingLotsSuccess","getParkingLotsFailure","searchParkingLotsSuccess","searchParkingLotsFailure","searchParkingLotsRequest","parkingLotService","getParkingLotsSaga","parkingLots","error","message","searchParkingLotsSaga","action","results","searchParkingLots","keyword","parkingLotSaga","GET_PARKING_LOTS_REQUEST","SEARCH_PARKING_LOTS_REQUEST"],"sources":["D:/Workhome/ParkingLot/live-map/redux/sagas/parkingLotSaga.js"],"sourcesContent":["import { call, put, takeLatest } from 'redux-saga/effects';\r\nimport * as parkingLot from '../consts/parkingLot';\r\nimport { getParkingLots } from '../../services/parkingLotService';\r\nimport { getParkingLotsSuccess, getParkingLotsFailure } from '../actions/parkingLot';\r\nimport { searchParkingLotsSuccess, searchParkingLotsFailure } from '../actions/parkingLot';\r\nimport { searchParkingLotsRequest } from '../actions/parkingLot';\r\nimport { parkingLotService } from '../../services/parkingLotService';\r\n\r\nfunction* getParkingLotsSaga() {\r\n  try {\r\n    const parkingLots = yield call(getParkingLots);\r\n    yield put(getParkingLotsSuccess(parkingLots));\r\n  } catch (error) {\r\n    yield put(getParkingLotsFailure(error.message));\r\n  }\r\n}\r\n\r\nfunction* searchParkingLotsSaga(action) {\r\n  try {\r\n    const results = yield call(parkingLotService.searchParkingLots, action.keyword);\r\n    yield put(searchParkingLotsSuccess(results));\r\n  } catch (error) {\r\n    yield put(searchParkingLotsFailure(error.message));\r\n  }\r\n}\r\n\r\nexport default function* parkingLotSaga() {\r\n  yield takeLatest(parkingLot.GET_PARKING_LOTS_REQUEST, getParkingLotsSaga);\r\n  yield takeLatest(parkingLot.SEARCH_PARKING_LOTS_REQUEST, searchParkingLotsSaga);\r\n} "],"mappings":"AAAA,SAASA,IAAI,EAAEC,GAAG,EAAEC,UAAU,QAAQ,oBAAoB;AAC1D,OAAO,KAAKC,UAAU;AACtB,SAASC,cAAc;AACvB,SAASC,qBAAqB,EAAEC,qBAAqB;AACrD,SAASC,wBAAwB,EAAEC,wBAAwB;AAC3D,SAASC,wBAAwB;AACjC,SAASC,iBAAiB;AAE1B,UAAUC,kBAAkBA,CAAA,EAAG;EAC7B,IAAI;IACF,MAAMC,WAAW,GAAG,MAAMZ,IAAI,CAACI,cAAc,CAAC;IAC9C,MAAMH,GAAG,CAACI,qBAAqB,CAACO,WAAW,CAAC,CAAC;EAC/C,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd,MAAMZ,GAAG,CAACK,qBAAqB,CAACO,KAAK,CAACC,OAAO,CAAC,CAAC;EACjD;AACF;AAEA,UAAUC,qBAAqBA,CAACC,MAAM,EAAE;EACtC,IAAI;IACF,MAAMC,OAAO,GAAG,MAAMjB,IAAI,CAACU,iBAAiB,CAACQ,iBAAiB,EAAEF,MAAM,CAACG,OAAO,CAAC;IAC/E,MAAMlB,GAAG,CAACM,wBAAwB,CAACU,OAAO,CAAC,CAAC;EAC9C,CAAC,CAAC,OAAOJ,KAAK,EAAE;IACd,MAAMZ,GAAG,CAACO,wBAAwB,CAACK,KAAK,CAACC,OAAO,CAAC,CAAC;EACpD;AACF;AAEA,eAAe,UAAUM,cAAcA,CAAA,EAAG;EACxC,MAAMlB,UAAU,CAACC,UAAU,CAACkB,wBAAwB,EAAEV,kBAAkB,CAAC;EACzE,MAAMT,UAAU,CAACC,UAAU,CAACmB,2BAA2B,EAAEP,qBAAqB,CAAC;AACjF","ignoreList":[]},"metadata":{},"sourceType":"module"}