{"ast":null,"code":"import _message from \"antd/lib/message\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == typeof i ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != typeof i) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nimport { takeLatest, call, put, all } from 'redux-saga/effects';\nimport * as search from \"../consts/search\";\nimport Request from \"../../utils/request\";\nimport Axios from 'axios';\nimport { getDetailLatLngService, getAddressGeocode } from \"./placeSaga\";\nlet searchRequest = null;\nexport default function* searchSaga() {\n  yield all([takeLatest(search.SEARCH_REQUEST, searchRequestSaga), takeLatest(search.SEARCH_AROUND_REQUEST, searchAroundSaga)]);\n}\nexport function searchService(query, location, radius, limit) {\n  if (searchRequest) searchRequest.cancel();\n  searchRequest = Request.autocomplete(query, location, radius, limit);\n  return searchRequest;\n}\nfunction searchAroundService(location, zoom) {\n  return Axios.post('https://napi.goong.io/v1/marker/get_markers_in_bear', {\n    \"lat\": location.lat,\n    \"lng\": location.lng,\n    \"distance\": 1000,\n    \"type_code\": [\"SUGGESTION\"],\n    //or \"cat_code\":[\"GT_STATIC\"]\n    \"bearing\": 0,\n    \"angle\": 360,\n    \"limit\": 50,\n    \"page\": 0,\n    \"zoom\": zoom\n  });\n}\nfunction* searchRequestSaga(action) {\n  if (action.query.trim() === '') {\n    yield put({\n      type: search.SEARCH_SUCCESS,\n      places: []\n    });\n  } else {\n    try {\n      const response = yield call(searchService, action.query, action.location);\n      if (response.data.status == 'OK') {\n        const places = response.data.predictions || [];\n        yield put({\n          type: search.SEARCH_SUCCESS,\n          places: places\n        });\n      } else {\n        yield put({\n          type: search.SEARCH_SUCCESS,\n          places: []\n        });\n      }\n    } catch (error) {}\n  }\n}\nfunction* searchAroundSaga(action) {\n  if (action.location.lat && action.location.lng) {\n    const response = yield call(searchAroundService, action.location, action.zoom);\n    if (response.data.length > 0) {\n      const response_center = yield call(getDetailLatLngService, {\n        latitude: action.location.lat,\n        longitude: action.location.lng\n      });\n      const place_center = response_center.data.results[0];\n      const place_center_return = _objectSpread(_objectSpread({}, place_center), {}, {\n        name: place_center.address_components[0].long_name,\n        formatted_address: getAddressGeocode(place_center)\n      });\n      yield put({\n        type: search.SEARCH_AROUND_SUCCESS,\n        around_places: response.data,\n        center_location: place_center_return\n      });\n    } else {\n      _message.error('Không có địa điểm nào quanh đây !');\n    }\n  }\n}","map":{"version":3,"names":["takeLatest","call","put","all","search","Request","Axios","getDetailLatLngService","getAddressGeocode","searchRequest","searchSaga","SEARCH_REQUEST","searchRequestSaga","SEARCH_AROUND_REQUEST","searchAroundSaga","searchService","query","location","radius","limit","cancel","autocomplete","searchAroundService","zoom","post","lat","lng","action","trim","type","SEARCH_SUCCESS","places","response","data","status","predictions","error","length","response_center","latitude","longitude","place_center","results","place_center_return","_objectSpread","name","address_components","long_name","formatted_address","SEARCH_AROUND_SUCCESS","around_places","center_location","_message"],"sources":["D:/Workhome/ParkingLot/live-map/redux/sagas/searchSaga.js"],"sourcesContent":["import { takeLatest, call, put, all } from 'redux-saga/effects';\nimport * as search from '../consts/search';\nimport Request from '../../utils/request';\nimport Axios from 'axios';\nimport { message } from 'antd';\nimport { getDetailLatLngService, getAddressGeocode } from './placeSaga'\n\nlet searchRequest = null;\nexport default function* searchSaga() {\n  yield all([\n    takeLatest(search.SEARCH_REQUEST, searchRequestSaga),\n    takeLatest(search.SEARCH_AROUND_REQUEST, searchAroundSaga),\n\n  ]);\n}\n\nexport function searchService(query, location, radius, limit) {\n  if (searchRequest) searchRequest.cancel();\n  searchRequest = Request.autocomplete(query, location, radius, limit);\n  return searchRequest;\n}\n\nfunction searchAroundService(location, zoom) {\n  return Axios.post('https://napi.goong.io/v1/marker/get_markers_in_bear', {\n    \"lat\": location.lat,\n    \"lng\": location.lng,\n    \"distance\": 1000,\n    \"type_code\": [\"SUGGESTION\"], //or \"cat_code\":[\"GT_STATIC\"]\n    \"bearing\": 0,\n    \"angle\": 360,\n    \"limit\": 50,\n    \"page\": 0,\n    \"zoom\": zoom\n  });\n}\n\nfunction* searchRequestSaga(action) {\n  if (action.query.trim() === '') {\n    yield put({ type: search.SEARCH_SUCCESS, places: [] });\n  }\n  else {\n    try {\n      const response = yield call(searchService, action.query, action.location);\n      if (response.data.status == 'OK') {\n        const places = response.data.predictions || [];\n        yield put({ type: search.SEARCH_SUCCESS, places: places });\n      } else {\n        yield put({ type: search.SEARCH_SUCCESS, places: [] });\n      }\n    } catch (error) {\n    }\n  }\n}\n\nfunction* searchAroundSaga(action) {\n  if (action.location.lat && action.location.lng) {\n    const response = yield call(searchAroundService, action.location, action.zoom);\n    if (response.data.length > 0) {\n      const response_center = yield call(getDetailLatLngService, { latitude: action.location.lat, longitude: action.location.lng });\n      const place_center = response_center.data.results[0];\n      const place_center_return = {\n        ...place_center,\n        name: place_center.address_components[0].long_name,\n        formatted_address: getAddressGeocode(place_center)\n      }\n      yield put({ type: search.SEARCH_AROUND_SUCCESS, around_places: response.data, center_location: place_center_return });\n    } else {\n      message.error('Không có địa điểm nào quanh đây !')\n    }\n  }\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}