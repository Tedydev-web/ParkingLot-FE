{"ast":null,"code":"import _message from \"antd/lib/message\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == typeof i ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != typeof t || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != typeof i) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nimport { takeLatest, call, put, all } from 'redux-saga/effects';\nimport * as place from \"../consts/place\";\nimport Request from \"../../utils/request\";\nimport { searchService } from \"./searchSaga\";\nimport Axios from \"axios\";\nexport default function* placeSaga() {\n  yield all([takeLatest(place.GET_DETAIL_BY_ID_REQUEST, getDetailIdSaga), takeLatest(place.GET_DETAIL_BY_LATLNG_REQUEST, getDetailLatLngSaga), takeLatest(place.GET_DETAIL_AROUND_PLACE_REQUEST, getDetailAroundPlaceSaga)]);\n}\nexport function getDetailIdService(pid) {\n  return Request.place_detail(pid);\n}\nexport function getDetailLatLngService(latLng) {\n  return Request.geocode(latLng);\n}\nexport function getDetailAroundPlaceService(id) {\n  return Axios.get(`https://napi.goong.io/v1/marker/get_marker_detail/${id}`);\n}\nfunction* getDetailIdSaga(action) {\n  try {\n    const response = yield call(getDetailIdService, action.pid);\n    const latLng = {\n      latitude: response.data.result.geometry.location.lat,\n      longitude: response.data.result.geometry.location.lng\n    };\n    const getByLatLng = yield call(getDetailLatLngService, latLng);\n    if (response.data.status == 'OK' && getByLatLng.data.results.length > 0) {\n      var _response_search$data;\n      const location = response.data.result.geometry.location.lat + \",\" + response.data.result.geometry.location.lng;\n      const response_search = yield call(searchService, response.data.result.name, location, 11, 10);\n      const near_places = (_response_search$data = response_search.data.predictions) === null || _response_search$data === void 0 ? void 0 : _response_search$data.filter(i => i.place_id !== action.pid);\n      yield put({\n        type: place.GET_DETAIL_BY_ID_SUCCESS,\n        data: response.data.result,\n        nearPlaces: near_places,\n        pid: action.pid\n      });\n    } else {\n      _message.error('Không tìm thấy địa điểm !');\n    }\n  } catch (error) {\n    throw error;\n  }\n}\nfunction* getDetailLatLngSaga(action) {\n  try {\n    const response = yield call(getDetailLatLngService, action.latLng);\n    if (response.data.status == 'OK' && response.data.results.length > 0) {\n      var _response_search$data2;\n      const place_return = response.data.results[0];\n      const name_place = place_return.address_components[0].long_name;\n      const location = place_return.geometry.location.lat + \",\" + place_return.geometry.location.lng;\n      const response_search = yield call(searchService, name_place, location, 11, 10);\n      const near_places = (_response_search$data2 = response_search.data.predictions) === null || _response_search$data2 === void 0 ? void 0 : _response_search$data2.filter(i => i.place_id !== place_return.place_id);\n      const return_data = _objectSpread(_objectSpread({}, place_return), {}, {\n        name: name_place,\n        formatted_address: getAddressGeocode(place_return)\n      });\n      yield put({\n        type: place.GET_DETAIL_BY_ID_SUCCESS,\n        data: return_data,\n        nearPlaces: near_places\n      });\n    } else {\n      _message.error('Không tìm thấy địa điểm !');\n    }\n  } catch (error) {\n    throw error;\n  }\n}\nfunction* getDetailAroundPlaceSaga(action) {\n  try {\n    const response = yield call(getDetailAroundPlaceService, action.id);\n    const data = response.data.data;\n    if (data) {\n      const return_data = _objectSpread(_objectSpread({}, data), {}, {\n        place_id: data._id,\n        geometry: {\n          location: {\n            lat: Number(data.lng_lat[1]),\n            lng: Number(data.lng_lat[0])\n          }\n        },\n        formatted_address: data.description.address\n      });\n      const name_place = return_data.name;\n      const location = return_data.geometry.location.lat + \",\" + return_data.geometry.location.lng;\n      const response_search = yield call(searchService, name_place, location, 10, 10);\n      const near_places = response_search.data.predictions;\n      yield put({\n        type: place.GET_DETAIL_AROUND_PLACE_SUCCESS,\n        data: return_data,\n        nearPlaces: near_places\n      });\n    } else {\n      _message.error('Không tìm thấy địa điểm !');\n    }\n  } catch (error) {\n    throw error;\n  }\n}\nexport function getAddressGeocode(place) {\n  let result = [];\n  place.address_components.slice(1).map(item => {\n    result.push(item.long_name);\n  });\n  return result.join(',');\n}","map":{"version":3,"names":["takeLatest","call","put","all","place","Request","searchService","Axios","placeSaga","GET_DETAIL_BY_ID_REQUEST","getDetailIdSaga","GET_DETAIL_BY_LATLNG_REQUEST","getDetailLatLngSaga","GET_DETAIL_AROUND_PLACE_REQUEST","getDetailAroundPlaceSaga","getDetailIdService","pid","place_detail","getDetailLatLngService","latLng","geocode","getDetailAroundPlaceService","id","get","action","response","latitude","data","result","geometry","location","lat","longitude","lng","getByLatLng","status","results","length","_response_search$data","response_search","name","near_places","predictions","filter","i","place_id","type","GET_DETAIL_BY_ID_SUCCESS","nearPlaces","_message","error","_response_search$data2","place_return","name_place","address_components","long_name","return_data","_objectSpread","formatted_address","getAddressGeocode","_id","Number","lng_lat","description","address","GET_DETAIL_AROUND_PLACE_SUCCESS","slice","map","item","push","join"],"sources":["D:/Workhome/ParkingLot/live-map/redux/sagas/placeSaga.js"],"sourcesContent":["import { takeLatest, call, put, all } from 'redux-saga/effects';\nimport * as place from '../consts/place';\nimport Request from '../../utils/request';\nimport { message } from 'antd'\nimport { searchService } from './searchSaga'\nimport Axios from \"axios\";\n\nexport default function* placeSaga() {\n  yield all([\n    takeLatest(place.GET_DETAIL_BY_ID_REQUEST, getDetailIdSaga),\n    takeLatest(place.GET_DETAIL_BY_LATLNG_REQUEST, getDetailLatLngSaga),\n    takeLatest(place.GET_DETAIL_AROUND_PLACE_REQUEST, getDetailAroundPlaceSaga)\n  ]);\n}\n\nexport function getDetailIdService(pid) {\n  return Request.place_detail(pid);\n}\n\nexport function getDetailLatLngService(latLng) {\n  return Request.geocode(latLng);\n}\n\nexport function getDetailAroundPlaceService(id) {\n  return Axios.get(`https://napi.goong.io/v1/marker/get_marker_detail/${id}`);\n}\n\nfunction* getDetailIdSaga(action) {\n  try {\n    const response = yield call(getDetailIdService, action.pid);\n\n    const latLng = {\n      latitude: response.data.result.geometry.location.lat,\n      longitude: response.data.result.geometry.location.lng\n    }\n    const getByLatLng = yield call(getDetailLatLngService, latLng);\n    if (response.data.status == 'OK' && getByLatLng.data.results.length > 0) {\n      const location = response.data.result.geometry.location.lat + \",\" + response.data.result.geometry.location.lng;\n      const response_search = yield call(searchService, response.data.result.name, location, 11, 10);\n      const near_places = response_search.data.predictions?.filter(i => i.place_id !== action.pid);\n      yield put({ type: place.GET_DETAIL_BY_ID_SUCCESS, data: response.data.result, nearPlaces: near_places, pid: action.pid })\n    } else {\n      message.error('Không tìm thấy địa điểm !')\n    }\n  } catch (error) {\n    throw error\n  }\n}\n\nfunction* getDetailLatLngSaga(action) {\n  try {\n    const response = yield call(getDetailLatLngService, action.latLng);\n    if (response.data.status == 'OK' && response.data.results.length > 0) {\n      const place_return = response.data.results[0];\n      const name_place = place_return.address_components[0].long_name;\n\n      const location = place_return.geometry.location.lat + \",\" + place_return.geometry.location.lng;\n      const response_search = yield call(searchService, name_place, location, 11, 10);\n      const near_places = response_search.data.predictions?.filter(i => i.place_id !== place_return.place_id);\n      const return_data = {\n        ...place_return,\n        name: name_place,\n        formatted_address: getAddressGeocode(place_return)\n      }\n      yield put({ type: place.GET_DETAIL_BY_ID_SUCCESS, data: return_data, nearPlaces: near_places })\n    } else {\n      message.error('Không tìm thấy địa điểm !')\n    }\n\n  } catch (error) {\n    throw error\n  }\n}\n\nfunction* getDetailAroundPlaceSaga(action) {\n  try {\n    const response = yield call(getDetailAroundPlaceService, action.id);\n    const data = response.data.data;\n    if (data) {\n      const return_data = {\n        ...data,\n        place_id: data._id,\n        geometry: {\n          location: {\n            lat: Number(data.lng_lat[1]),\n            lng: Number(data.lng_lat[0]),\n          }\n        },\n        formatted_address: data.description.address\n      }\n      const name_place = return_data.name;\n      const location = return_data.geometry.location.lat + \",\" + return_data.geometry.location.lng;\n      const response_search = yield call(searchService, name_place, location, 10, 10);\n      const near_places = response_search.data.predictions;\n      yield put({ type: place.GET_DETAIL_AROUND_PLACE_SUCCESS, data: return_data, nearPlaces: near_places })\n    } else {\n      message.error('Không tìm thấy địa điểm !')\n    }\n  } catch (error) {\n    throw error\n  }\n}\n\nexport function getAddressGeocode(place) {\n  let result = [];\n  place.address_components.slice(1).map(item => {\n    result.push(item.long_name);\n  })\n  return result.join(',')\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}